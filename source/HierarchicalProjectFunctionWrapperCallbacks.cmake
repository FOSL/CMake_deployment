include(HierarchicalDefaultFunctionWrapperCallbacks)

macro(install_project) # {{{
    set_target_properties(${PROJECT_NAME} PROPERTIES PREFIX "${PROJECT_NAMESPACE}-")
	# Destination directory settings {{{
		set(${UPPERCASE_PROJECT_NAMESPACE}_${UPPERCASE_PROJECT_COMPONENT}_INSTALL_LIBRARY_DESTINATION "lib" CACHE STRING
			"${PROJECT_NAMESPACE}::${PROJECT_COMPONENT} shared library install destination directory.")
		set(${UPPERCASE_PROJECT_NAMESPACE}_${UPPERCASE_PROJECT_COMPONENT}_INSTALL_ARCHIVE_DESTINATION "lib" CACHE STRING
			"${PROJECT_NAMESPACE}::${PROJECT_COMPONENT} archive install destination directory.")
		set(${UPPERCASE_PROJECT_NAMESPACE}_${UPPERCASE_PROJECT_COMPONENT}_INSTALL_RUNTIME_DESTINATION "bin" CACHE STRING
			"${PROJECT_NAMESPACE}::${PROJECT_COMPONENT} runtime install destination directory.")
		set(${UPPERCASE_PROJECT_NAMESPACE}_${UPPERCASE_PROJECT_COMPONENT}_INSTALL_INCLUDES_DESTINATION "include" CACHE STRING
			"${PROJECT_NAMESPACE}::${PROJECT_COMPONENT} includes install destination directory.")
	# }}}
	# Intsall targets {{{
		install(TARGETS ${PROJECT_NAME} EXPORT ${PROJECT_NAME}Targets
			LIBRARY  DESTINATION "${${UPPERCASE_PROJECT_NAMESPACE}_${UPPERCASE_PROJECT_COMPONENT}_INSTALL_LIBRARY_DESTINATION}"
			ARCHIVE  DESTINATION "${${UPPERCASE_PROJECT_NAMESPACE}_${UPPERCASE_PROJECT_COMPONENT}_INSTALL_ARCHIVE_DESTINATION}"
			RUNTIME  DESTINATION "${${UPPERCASE_PROJECT_NAMESPACE}_${UPPERCASE_PROJECT_COMPONENT}_INSTALL_RUNTIME_DESTINATION}"
			INCLUDES DESTINATION "${${UPPERCASE_PROJECT_NAMESPACE}_${UPPERCASE_PROJECT_COMPONENT}_INSTALL_INCLUDES_DESTINATION}"
		)
		install(EXPORT ${PROJECT_NAME}Targets
			FILE "${PROJECT_NAMESPACE}-${PROJECT_NAME}Targets.cmake"
			NAMESPACE ${PROJECT_NAMESPACE}::
			DESTINATION "lib/cmake/${PROJECT_NAMESPACE}-${PROJECT_NAME}"
		)
	# }}}
	# Install config {{{
		include(CMakePackageConfigHelpers)
		write_basic_package_version_file("${PROJECT_NAMESPACE}-${PROJECT_NAME}ConfigVersion.cmake"
			VERSION ${PROJECT_NAME}_VERSION}
			COMPATIBILITY SameMajorVersion
		)
		install(FILES
			"${PROJECT_NAMESPACE}-${PROJECT_NAME}Config.cmake"
			"${PROJECT_BINARY_DIR}/${PROJECT_NAMESPACE}-${PROJECT_NAME}ConfigVersion.cmake"
			DESTINATION "lib/cmake/${PROJECT_NAMESPACE}-${PROJECT_NAME}"
		)
	# }}}
	# Install sources {{{
		install(DIRECTORY "${PROJECT_SOURCE_DIR}/${PROJECT_NAMESPACE}"
			DESTINATION "${${UPPERCASE_PROJECT_NAMESPACE}_${UPPERCASE_PROJECT_COMPONENT}_INSTALL_INCLUDES_DESTINATION}"
			COMPONENT ${PROJECT_COMPONENT}-headers
			FILES_MATCHING
			PATTERN "*.inc"
			PATTERN "*.h"
			PATTERN "*.hpp"
			PATTERN "*.mpp"
			PATTERN "*.tpp"
			PATTERN "*.cuh"
			PATTERN "*.cuhpp"
		)
	# }}}
endmacro() # }}}
